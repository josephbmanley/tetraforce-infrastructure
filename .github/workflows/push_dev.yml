name: Build Development Environment

on:
  push:
    branches-ignore:
      - master
  workflow_dispatch: {}

jobs:
  cloudformation:
    runs-on: ubuntu-latest
    needs: deploy_network
    steps:
    - name: Checkout Repo
      uses: actions/checkout@v2.1.0
      with:
        submodules: 'true'
    - name: Ship to CloudFormation S3
      uses: jakejarvis/s3-sync-action@master
      with:
        args: --follow-symlinks --delete
      env:
        SOURCE_DIR: cloudformation
        AWS_REGION: "us-east-2"
        DEST_DIR: develop/cloudformation
        AWS_S3_BUCKET: tetraforce-dev-deployment-bucket-us-east-2
        AWS_ACCESS_KEY_ID: ${{ secrets.DEV_AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.DEV_AWS_SECRET_ACCESS_KEY }}
    - name: Setup Python
      uses: actions/setup-python@v2
      with:
        python-version: "3.6"
    - name: Build Lambdas
      run: |
        cd lambda
        for file in `dir`
        do
          echo "Building: $file"
          cd $file
          echo "Installing requirements..."
          pip install -q -r requirements.txt -t .
          echo "Zipping..."
          zip -qq -r ../$file.zip .
          cd ..
          echo "Cleaning up..."
          rm -rf $file
        done
    - name: Ship to Lambdas S3
      uses: jakejarvis/s3-sync-action@master
      with:
        args: --follow-symlinks --delete
      env:
        SOURCE_DIR: lambda
        AWS_REGION: "us-east-2"
        DEST_DIR: develop/lambda
        AWS_S3_BUCKET: tetraforce-dev-deployment-bucket-us-east-2
        AWS_ACCESS_KEY_ID: ${{ secrets.DEV_AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.DEV_AWS_SECRET_ACCESS_KEY }}
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.DEV_AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.DEV_AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-2
    - name: Deploy to AWS CloudFormation
      uses: aws-actions/aws-cloudformation-github-deploy@v1
      with:
        name: tetraforce-dev-${{ github.actor }}
        template: cloudformation/tetraforce/top.yaml
        capabilities: "CAPABILITY_NAMED_IAM,CAPABILITY_IAM"
        parameter-overrides: DeploymentBucket=tetraforce-dev-deployment-bucket-us-east-2,VpcId=${{ secrets.DEV_VPC_ID }},environment=${{ github.actor }},release=develop,PublicSubnets=${{ secrets.DEV_SUBNET_IDS }},AsgDesiredCapacity=0,GitHubTokenSecret=${{ secrets.DEV_SECRET_ARN }}
  release_buckets:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repo
      uses: actions/checkout@v2.1.0
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.DEV_AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.DEV_AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-2
    - name: Deploy to AWS CloudFormation
      uses: aws-actions/aws-cloudformation-github-deploy@v1
      with:
        name: tetraforce-releases-${{ github.actor }}
        template: cloudformation/release_site/top.yaml
        capabilities: "CAPABILITY_NAMED_IAM,CAPABILITY_IAM"
        no-fail-on-empty-changeset: "1"
        parameter-overrides: environment=${{ github.actor }}
  deploy_network:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repo
      uses: actions/checkout@v2.1.0
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.DEV_AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.DEV_AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-2
    - name: Deploy to AWS CloudFormation
      uses: aws-actions/aws-cloudformation-github-deploy@v1
      with:
        name: tetraforce-network
        template: cloudformation/network/top.yaml
        capabilities: "CAPABILITY_NAMED_IAM,CAPABILITY_IAM"
        no-fail-on-empty-changeset: "1"