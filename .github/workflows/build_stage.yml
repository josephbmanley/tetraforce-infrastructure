name: Build Stage

on:
  push:
    branches:
      - master
  workflow_dispatch: {}

jobs:
  cloudformation:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repo
      uses: actions/checkout@v2.1.0
      with:
        submodules: 'true'
    - name: Ship to CloudFormation S3
      uses: jakejarvis/s3-sync-action@master
      with:
        args: --follow-symlinks --delete
      env:
        SOURCE_DIR: cloudformation
        AWS_REGION: "us-east-2"
        DEST_DIR: stage/cloudformation
        AWS_S3_BUCKET: tetraforce-deployment-bucket-us-east-2
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    - name: Setup Python
      uses: actions/setup-python@v2
      with:
        python-version: "3.6"
    - name: Build Lambdas
      run: |
        cd lambda
        for file in `dir`
        do
          echo "Building: $file"
          cd $file
          echo "Installing requirements..."
          pip install -q -r requirements.txt -t .
          echo "Zipping..."
          zip -qq -r ../$file.zip .
          cd ..
          echo "Cleaning up..."
          rm -rf $file
        done
    - name: Ship to Lambdas S3
      uses: jakejarvis/s3-sync-action@master
      with:
        args: --follow-symlinks --delete
      env:
        SOURCE_DIR: lambda
        AWS_REGION: "us-east-2"
        DEST_DIR: stage/lambda
        AWS_S3_BUCKET: tetraforce-deployment-bucket-us-east-2
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-2
    - name: Deploy to AWS CloudFormation
      uses: aws-actions/aws-cloudformation-github-deploy@v1
      with:
        name: tetraforce-stage
        template: cloudformation/tetraforce/top.yaml
        capabilities: "CAPABILITY_NAMED_IAM,CAPABILITY_IAM"
        parameter-overrides: VpcId=${{ secrets.VPC_ID }},DockerTag=stage,environment=stage,release=stage,PublicSubnets=${{ secrets.SUBNET_IDS }},AsgDesiredCapacity=1,GitHubTokenSecret=${{ secrets.SECRET_ARN }},MaxServerCount=10
  iam:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repo
      uses: actions/checkout@v2.1.0
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-2
    - name: Deploy to AWS CloudFormation
      uses: aws-actions/aws-cloudformation-github-deploy@v1
      with:
        name: tetraforce-iam
        template: cloudformation/iam_groups/top.yaml
        capabilities: "CAPABILITY_NAMED_IAM,CAPABILITY_IAM"
        no-fail-on-empty-changeset: "1"
  release_buckets:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repo
      uses: actions/checkout@v2.1.0
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-2
    - name: Deploy to AWS CloudFormation
      uses: aws-actions/aws-cloudformation-github-deploy@v1
      with:
        name: tetraforce-releases-stage
        template: cloudformation/release_site/top.yaml
        capabilities: "CAPABILITY_NAMED_IAM,CAPABILITY_IAM"
        no-fail-on-empty-changeset: "1"
        parameter-overrides: environment=stage